[{"C:\\Projects\\cinema-app\\client\\src\\index.js":"1","C:\\Projects\\cinema-app\\client\\src\\App.js":"2","C:\\Projects\\cinema-app\\client\\src\\components\\index.js":"3","C:\\Projects\\cinema-app\\client\\src\\components\\SignIn.jsx":"4","C:\\Projects\\cinema-app\\client\\src\\components\\SignUp.jsx":"5","C:\\Projects\\cinema-app\\client\\src\\components\\Dashboard.jsx":"6","C:\\Projects\\cinema-app\\client\\src\\components\\Movies.jsx":"7","C:\\Projects\\cinema-app\\client\\src\\components\\Movie.jsx":"8","C:\\Projects\\cinema-app\\client\\src\\components\\Footer.jsx":"9","C:\\Projects\\cinema-app\\client\\src\\components\\BookingSeats.jsx":"10","C:\\Projects\\cinema-app\\client\\src\\components\\BookingPage.jsx":"11"},{"size":197,"mtime":1606639388812,"results":"12","hashOfConfig":"13"},{"size":3485,"mtime":1607519812116,"results":"14","hashOfConfig":"13"},{"size":2654,"mtime":1607529747235,"results":"15","hashOfConfig":"13"},{"size":4257,"mtime":1607509502490,"results":"16","hashOfConfig":"13"},{"size":4084,"mtime":1607531484437,"results":"17","hashOfConfig":"13"},{"size":3941,"mtime":1607513277779,"results":"18","hashOfConfig":"13"},{"size":2651,"mtime":1607691871883,"results":"19","hashOfConfig":"13"},{"size":4367,"mtime":1607614819658,"results":"20","hashOfConfig":"13"},{"size":1479,"mtime":1607508049879,"results":"21","hashOfConfig":"13"},{"size":5201,"mtime":1607709931419,"results":"22","hashOfConfig":"13"},{"size":8384,"mtime":1607713686530,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"143wlcs",{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":8,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Projects\\cinema-app\\client\\src\\index.js",[],["51","52","53","54","55"],"C:\\Projects\\cinema-app\\client\\src\\App.js",["56","57","58","59"],"import React, { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport {\n  Dashboard,\n  SignIn,\n  SignUp,\n  CssBaseline,\n  useMediaQuery,\n  Movie,\n  BookingPage,\n} from './components';\nimport 'react-toastify/dist/ReactToastify.css';\n\ntoast.configure();\n\nexport default function App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          primary: {\n            main: '#5f5da9',\n            light: '#7f7dba',\n            dark: '#424176',\n          },\n          secondary: {\n            main: '#e0f7fa',\n            light: '#e6f8fb',\n            dark: '#9cacaf',\n          },\n          error: {\n            main: '#f44336',\n            light: '#e57373',\n            dark: '#d32f2f',\n          },\n          warning: {\n            main: '#ff9800',\n            light: '#ffb74d',\n            dark: '#f57c00',\n          },\n          info: {\n            main: '#2196f3',\n            light: '#64b5f6',\n            dark: '#1976d2',\n          },\n          success: {\n            main: '#4caf50',\n            light: '#81c784',\n            dark: '#388e3c',\n          },\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const setAuth = (boolean) => {\n    setIsAuthenticated(boolean);\n  };\n\n  async function isAuth() {\n    try {\n      const response = await fetch('http://localhost:5000/auth/is-verify', {\n        method: 'GET',\n        headers: { token: localStorage.token },\n      });\n\n      const parseRes = await response.json();\n\n      if (\n        parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false)\n      );\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  useEffect(() => {\n    isAuth();\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <BrowserRouter>\n        <div className=\"container\" />\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to=\"/dashboard\" />\n          </Route>\n\n          <Route\n            exact\n            path=\"/login\"\n            render={(props) =>\n              !isAuthenticated ? (\n                <SignIn {...props} setAuth={setAuth} />\n              ) : (\n                <Redirect to=\"/dashboard\" />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/register\"\n            render={(props) =>\n              !isAuthenticated ? (\n                <SignUp {...props} setAuth={setAuth} />\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/dashboard\"\n            render={(props) =>\n              isAuthenticated ? (\n                <Dashboard {...props} setAuth={setAuth} />\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          />\n          <Route path=\"/movies/:id\" component={Movie} />\n          <Route path=\"/booking/:id\" component={BookingPage} />\n          {/* <PrivateRoute path=\"/dashboard/myTickets\" component={MyTickets}/> */}\n          <Route path=\"*\" component={() => '404 NOT FOUND'} />\n        </Switch>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n}\n",["60","61","62","63","64"],"C:\\Projects\\cinema-app\\client\\src\\components\\index.js",["65","66","67","68","69","70","71","72"],"C:\\Projects\\cinema-app\\client\\src\\components\\SignIn.jsx",["73"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  Typography,\r\n  Container,\r\n  CssBaseline,\r\n  Avatar,\r\n  Button,\r\n  LockOutlinedIcon,\r\n  TextField,\r\n  Link,\r\n  Grid,\r\n  Footer,\r\n} from '.';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.grey.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn({ setAuth }) {\r\n  const classes = useStyles();\r\n\r\n  const [inputs, setInputs] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const { email, password } = inputs;\r\n\r\n  const onChange = (e) => {\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { email, password };\r\n\r\n      const response = await fetch('http://localhost:5000/auth/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      if (parseRes.token) {\r\n        localStorage.setItem('token', parseRes.token);\r\n\r\n        setAuth(true);\r\n        toast.success('Добро пожаловать!', {\r\n          position: 'bottom-right',\r\n          autoClose: 2800,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      } else setAuth(false);\r\n      toast.info(parseRes, {\r\n        position: 'bottom-right',\r\n        autoClose: 2800,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Вход\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={onSubmitForm}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => onChange(e)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Пароль\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  value={password}\r\n                  onChange={(e) => onChange(e)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                >\r\n                  Войти\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/register\" variant=\"body2\" color=\"secondary\">\r\n                  Нет аккаунта? Регистрация\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\cinema-app\\client\\src\\components\\SignUp.jsx",["74"],"C:\\Projects\\cinema-app\\client\\src\\components\\Dashboard.jsx",["75","76","77"],"C:\\Projects\\cinema-app\\client\\src\\components\\Movies.jsx",["78"],"C:\\Projects\\cinema-app\\client\\src\\components\\Movie.jsx",["79"],"import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Typography,\r\n  Container,\r\n  Box,\r\n  Button,\r\n  ArrowBackIcon,\r\n  ConfirmationNumberIcon,\r\n} from '.';\r\n\r\nconst Movie = () => {\r\n  const [selectedMovie, setSelectedMovie] = useState('');\r\n  const [genre, setGenre] = useState('');\r\n  const { id } = useParams();\r\n  const getMovie = async () => {\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/movies/${id}`, {\r\n        method: 'GET',\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      const parse = await res.json();\r\n      setSelectedMovie(parse[0]);\r\n      setGenre(parse[0].movie_genre);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMovie();\r\n  }, []);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    backImg: {\r\n      backgroundImage: `linear-gradient(to right, rgba(0,0,0,.9) 25%, transparent 100%),url(${selectedMovie.image_url})`,\r\n      position: 'absolute',\r\n      filter: 'blur(1.3px)',\r\n      height: '100vh',\r\n      backgroundPosition: 'center',\r\n      backgroundSize: 'cover',\r\n      backgroundRepeat: 'no-repeat',\r\n      width: '100%',\r\n    },\r\n    movieInfo: {\r\n      background: 'transparant',\r\n      transform: 'translate(0%, 0%)',\r\n      padding: theme.spacing(30, 2, 0, 2),\r\n      margin: theme.spacing(0, 50, 0, 0),\r\n      [theme.breakpoints.down('sm')]: {\r\n        padding: theme.spacing(15, 2, 0, 2),\r\n      },\r\n    },\r\n    genre: {\r\n      padding: theme.spacing(0.5, 4),\r\n      marginRight: theme.spacing(1.5),\r\n      border: '2px solid ',\r\n      borderColor: '#5f5da9',\r\n      borderRadius: 20,\r\n      [theme.breakpoints.down('sm')]: {\r\n        padding: theme.spacing(0.5, 2),\r\n      },\r\n    },\r\n    description: {\r\n      mixBlendMode: 'difference',\r\n      padding: theme.spacing(0, 50, 0, 0),\r\n      [theme.breakpoints.down('sm')]: {\r\n        padding: theme.spacing(0, 2, 0, 0),\r\n      },\r\n    },\r\n    director: {\r\n      color: theme.palette.primary.light,\r\n    },\r\n    btn: {\r\n      border: '2px solid ',\r\n      borderColor: '#5f5da9',\r\n      borderRadius: 20,\r\n      padding: theme.spacing(0.7, 4),\r\n      marginRight: theme.spacing(1.5),\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      hideOnSmall: {\r\n        display: 'none',\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.backImg} />\r\n      <Container className={classes.movieInfo} maxWidth=\"lg\">\r\n        <Box mb={3} display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\">\r\n          {genre[0] !== undefined ? (\r\n            genre.map((genree) => (\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                color=\"inherit\"\r\n                className={classes.genre}\r\n              >\r\n                {genree}\r\n              </Typography>\r\n            ))\r\n          ) : (\r\n            <p>No genres</p>\r\n          )}\r\n        </Box>\r\n\r\n        <Typography gutterBottom variant=\"h1\" color=\"inherit\" align=\"left\">\r\n          {selectedMovie.movie_title}\r\n        </Typography>\r\n\r\n        <Typography\r\n          className={classes.description}\r\n          variant=\"body1\"\r\n          color=\"inherit\"\r\n          align=\"left\"\r\n          paragraph\r\n        >\r\n          {selectedMovie.movie_description}\r\n        </Typography>\r\n        <Typography\r\n          className={classes.director}\r\n          variant=\"h5\"\r\n          align=\"left\"\r\n          gutterBottom\r\n        >\r\n          Режиссёр:\r\n          {` `}\r\n          {selectedMovie.movie_director}\r\n        </Typography>\r\n        <Typography variant=\"body1\" color=\"inherit\" gutterBottom paragraph>\r\n          {`Длительность: `}\r\n          {selectedMovie.movie_duration}\r\n          {` мин.`}\r\n        </Typography>\r\n        <Button\r\n          className={classes.btn}\r\n          variant=\"outlined\"\r\n          href=\"/dashboard\"\r\n          startIcon={<ArrowBackIcon />}\r\n        >\r\n          Назад\r\n        </Button>\r\n        <Button\r\n          className={classes.btn}\r\n          variant=\"outlined\"\r\n          href={`/booking/${id}`}\r\n          startIcon={<ConfirmationNumberIcon />}\r\n        >\r\n          Купить билеты\r\n        </Button>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","C:\\Projects\\cinema-app\\client\\src\\components\\Footer.jsx",[],"C:\\Projects\\cinema-app\\client\\src\\components\\BookingSeats.jsx",["80","81","82","83"],"C:\\Projects\\cinema-app\\client\\src\\components\\BookingPage.jsx",["84","85","86","87","88","89","90"],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":79,"column":7,"nodeType":"103","messageId":"104","endLine":79,"endColumn":18},{"ruleId":"105","severity":1,"message":"106","line":102,"column":25,"nodeType":"107","endLine":102,"endColumn":35},{"ruleId":"105","severity":1,"message":"106","line":113,"column":25,"nodeType":"107","endLine":113,"endColumn":35},{"ruleId":"105","severity":1,"message":"106","line":124,"column":28,"nodeType":"107","endLine":124,"endColumn":38},{"ruleId":"91","replacedBy":"108"},{"ruleId":"93","replacedBy":"109"},{"ruleId":"95","replacedBy":"110"},{"ruleId":"97","replacedBy":"111"},{"ruleId":"99","replacedBy":"112"},{"ruleId":"113","severity":2,"message":"114","line":2,"column":1,"nodeType":"115","endLine":2,"endColumn":52},{"ruleId":"113","severity":2,"message":"114","line":3,"column":1,"nodeType":"115","endLine":3,"endColumn":46},{"ruleId":"113","severity":2,"message":"114","line":4,"column":1,"nodeType":"115","endLine":4,"endColumn":46},{"ruleId":"113","severity":2,"message":"114","line":5,"column":1,"nodeType":"115","endLine":5,"endColumn":46},{"ruleId":"113","severity":2,"message":"114","line":6,"column":1,"nodeType":"115","endLine":6,"endColumn":46},{"ruleId":"113","severity":2,"message":"114","line":7,"column":1,"nodeType":"115","endLine":7,"endColumn":44},{"ruleId":"113","severity":2,"message":"114","line":8,"column":1,"nodeType":"115","endLine":8,"endColumn":56},{"ruleId":"113","severity":2,"message":"114","line":9,"column":1,"nodeType":"115","endLine":9,"endColumn":58},{"ruleId":"101","severity":1,"message":"102","line":87,"column":7,"nodeType":"103","messageId":"104","endLine":87,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":78,"column":7,"nodeType":"103","messageId":"104","endLine":78,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":76,"column":7,"nodeType":"103","messageId":"104","endLine":76,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":86,"column":7,"nodeType":"103","messageId":"104","endLine":86,"endColumn":20},{"ruleId":"105","severity":1,"message":"106","line":108,"column":21,"nodeType":"107","endLine":108,"endColumn":31},{"ruleId":"101","severity":1,"message":"102","line":45,"column":7,"nodeType":"103","messageId":"104","endLine":45,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":28,"column":7,"nodeType":"103","messageId":"104","endLine":28,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":90,"column":7,"nodeType":"103","messageId":"104","endLine":90,"endColumn":18},{"ruleId":"101","severity":1,"message":"102","line":91,"column":7,"nodeType":"103","messageId":"104","endLine":91,"endColumn":18},{"ruleId":"101","severity":1,"message":"102","line":104,"column":7,"nodeType":"103","messageId":"104","endLine":104,"endColumn":18},{"ruleId":"101","severity":1,"message":"102","line":106,"column":7,"nodeType":"103","messageId":"104","endLine":106,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":33,"column":7,"nodeType":"103","messageId":"104","endLine":33,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":49,"column":7,"nodeType":"103","messageId":"104","endLine":49,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":63,"column":7,"nodeType":"103","messageId":"104","endLine":63,"endColumn":18},{"ruleId":"101","severity":1,"message":"102","line":65,"column":7,"nodeType":"103","messageId":"104","endLine":65,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":79,"column":7,"nodeType":"103","messageId":"104","endLine":79,"endColumn":18},{"ruleId":"101","severity":1,"message":"102","line":82,"column":7,"nodeType":"103","messageId":"104","endLine":82,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":92,"column":3,"nodeType":"103","messageId":"104","endLine":92,"endColumn":14},"lines-around-directive",["116"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","react/jsx-props-no-spreading","Prop spreading is forbidden","JSXSpreadAttribute",["116"],[],[],[],[],"import/no-cycle","Dependency cycle detected.","ExportNamedDeclaration","padding-line-between-statements"]