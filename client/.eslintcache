[{"C:\\Projects\\cinema-app\\client\\src\\components\\SignIn.jsx":"1","C:\\Projects\\cinema-app\\client\\src\\components\\BookingPage.jsx":"2","C:\\Projects\\cinema-app\\client\\src\\components\\Movies.jsx":"3","C:\\Projects\\cinema-app\\client\\src\\components\\index.js":"4","C:\\Projects\\cinema-app\\client\\src\\index.js":"5","C:\\Projects\\cinema-app\\client\\src\\components\\MyTickets.jsx":"6","C:\\Projects\\cinema-app\\client\\src\\components\\SignUp.jsx":"7","C:\\Projects\\cinema-app\\client\\src\\components\\Dashboard.jsx":"8","C:\\Projects\\cinema-app\\client\\src\\components\\Footer.jsx":"9","C:\\Projects\\cinema-app\\client\\src\\components\\Header.jsx":"10","C:\\Projects\\cinema-app\\client\\src\\components\\BookingSeats.jsx":"11","C:\\Projects\\cinema-app\\client\\src\\components\\Movie.jsx":"12","C:\\Projects\\cinema-app\\client\\src\\App.js":"13"},{"size":4243,"mtime":1608112385166,"results":"14","hashOfConfig":"15"},{"size":11871,"mtime":1608114668449,"results":"16","hashOfConfig":"15"},{"size":2761,"mtime":1607891872988,"results":"17","hashOfConfig":"15"},{"size":2754,"mtime":1608112202449,"results":"18","hashOfConfig":"15"},{"size":207,"mtime":1608048985112,"results":"19","hashOfConfig":"15"},{"size":5017,"mtime":1608112319161,"results":"20","hashOfConfig":"15"},{"size":4070,"mtime":1608112371129,"results":"21","hashOfConfig":"15"},{"size":1363,"mtime":1608112037274,"results":"22","hashOfConfig":"15"},{"size":1561,"mtime":1607866459105,"results":"23","hashOfConfig":"15"},{"size":2601,"mtime":1608048985104,"results":"24","hashOfConfig":"15"},{"size":3959,"mtime":1608112225170,"results":"25","hashOfConfig":"15"},{"size":4236,"mtime":1607867629078,"results":"26","hashOfConfig":"15"},{"size":3629,"mtime":1608048985098,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"143wlcs",{"filePath":"30","messages":"31","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":10,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Projects\\cinema-app\\client\\src\\components\\SignIn.jsx",["59"],"C:\\Projects\\cinema-app\\client\\src\\components\\BookingPage.jsx",["60","61","62","63","64","65","66","67"],"/* eslint-disable prefer-const */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  // MenuItem,\r\n  TextField,\r\n  Typography,\r\n  Button,\r\n  BookingSeats,\r\n} from '.';\r\n\r\nconst BookingPage = () => {\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [userId, setUserId] = useState('');\r\n  const getEmail = async () => {\r\n    try {\r\n      const res = await fetch('http://localhost:5000/dashboard/', {\r\n        method: 'GET',\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      const parseData = await res.json();\r\n      setEmail(parseData.user_email);\r\n      setUserId(parseData.user_id);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const [movie, setMovie] = useState('');\r\n  const { id } = useParams();\r\n  const getMovie = async () => {\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/movies/${id}`, {\r\n        method: 'GET',\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      const parse = await res.json();\r\n      setMovie(parse[0]);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const [hallScheme, setHallScheme] = useState('');\r\n  const getHallSchemeData = async () => {\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/booking/${id}`, {\r\n        method: 'GET',\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      const parse = await res.json();\r\n      setHallScheme(parse[0]);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const [showtime, setShowtime] = useState('');\r\n  const getShowtime = async () => {\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/booking/showtimes/${id}`, {\r\n        method: 'GET',\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      const parse = await res.json();\r\n      setShowtime(parse[0]);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const [seats, setSeats] = useState('');\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [selectedSeats, setSelectedSeats] = useState('');\r\n  const [newSeats, setNewSeats] = useState('');\r\n  let bookedSeats = [];\r\n  const getSeats = async () => {\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/booking/${id}`, {\r\n        method: 'GET',\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      const parse = await res.json();\r\n      setSeats(parse[0].seats);\r\n      setNewSeats(parse[0].seats);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEmail();\r\n    getMovie();\r\n    getHallSchemeData();\r\n    getShowtime();\r\n    getSeats();\r\n  }, []);\r\n\r\n  const updateHallScheme = async () => {\r\n    try {\r\n      // eslint-disable-next-line no-restricted-syntax\r\n      for (let i = 0; i < newSeats.length; i += 1) {\r\n        // eslint-disable-next-line no-restricted-syntax\r\n        for (let j = 0; j < newSeats[i].length; j += 1) {\r\n          // eslint-disable-next-line eqeqeq\r\n          if (newSeats[i][j] === 2) {\r\n            newSeats[i][j] = 1;\r\n            bookedSeats.push([i, j]);\r\n          }\r\n        }\r\n      }\r\n      const body = { newSeats };\r\n      const myHeaders = new Headers();\r\n      myHeaders.append('Content-Type', 'application/json');\r\n      myHeaders.append('token', localStorage.token);\r\n\r\n      await fetch(\r\n        `http://localhost:5000/booking/hallschemes/${hallScheme.hallscheme_id}`,\r\n        {\r\n          method: 'PUT',\r\n          headers: myHeaders,\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const [count, setCount] = useState(0);\r\n  const [total, setTotal] = useState(0);\r\n  function onSelectSeat(row, seat) {\r\n    let ttl = showtime.ticket_price * (count + 1);\r\n    if (newSeats !== undefined) {\r\n      if (seats[row][seat] === 1) {\r\n        newSeats[row][seat] = 1;\r\n      } else if (seats[row][seat] === 2) {\r\n        newSeats[row][seat] = 3;\r\n        setCount(count - 1);\r\n        setTotal(ttl);\r\n      } else if (seats[row][seat] === 3) {\r\n        newSeats[row][seat] = 2;\r\n        setCount(count + 1);\r\n        setTotal(ttl);\r\n      } else {\r\n        newSeats[row][seat] = 4;\r\n      }\r\n    }\r\n    setSelectedSeats([row, seat]);\r\n    setNewSeats(newSeats);\r\n  }\r\n\r\n  const createReservation = async () => {\r\n    try {\r\n      const myHeaders = new Headers();\r\n\r\n      myHeaders.append('Content-Type', 'application/json');\r\n      myHeaders.append('token', localStorage.token);\r\n      const shId = showtime.showtime_id;\r\n      const body = { shId, bookedSeats, selectedDate, total };\r\n\r\n      await fetch(`http://localhost:5000/reservations/${userId} `, {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: JSON.stringify(body),\r\n      });\r\n      toast.success('Билеты оформлены!', {\r\n        position: 'bottom-right',\r\n        autoClose: 2500,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  function delay(URL) {\r\n    setTimeout(function () {\r\n      window.location = URL;\r\n    }, 2500);\r\n  }\r\n\r\n  function onConfirmBook() {\r\n    updateHallScheme();\r\n    createReservation();\r\n    delay('/');\r\n  }\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    blurBackground: {\r\n      backgroundImage: `linear-gradient(to right, rgba(0,0,0,.7) 10%, rgba(0,0,0,.7) 10%),url(${movie.back_image_url})`,\r\n      position: 'absolute',\r\n      top: 0,\r\n      zIndex: -1,\r\n      right: 0,\r\n      height: '100vh',\r\n      filter: 'blur(6px)',\r\n      backgroundPosition: 'center',\r\n      backgroundSize: 'cover',\r\n      backgroundRepeat: 'no-repeat',\r\n      width: '100%',\r\n    },\r\n    container: {\r\n      background: 'transparant',\r\n      transform: 'translate(0%, 0%)',\r\n    },\r\n    form: {\r\n      padding: theme.spacing(4, 0, 0, 0),\r\n    },\r\n    bannerTitle: {\r\n      fontSize: theme.spacing(1.4),\r\n      textTransform: 'uppercase',\r\n      color: 'rgb(93, 93, 97)',\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    bannerContent: {\r\n      fontSize: theme.spacing(2),\r\n\r\n      color: theme.palette.common.white,\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      hideOnSmall: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    checkout: {\r\n      padding: theme.spacing(4, 0, 0, 0),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Container className={classes.container} maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid className={classes.form} container spacing={3}>\r\n              <Grid item xs className={classes.hideOnSmall}>\r\n                <TextField\r\n                  fullWidth\r\n                  disabled\r\n                  value={`${hallScheme.hall_name} зал`}\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs>\r\n                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                  <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    inputVariant=\"outlined\"\r\n                    margin=\"none\"\r\n                    fullWidth\r\n                    id=\"start-date\"\r\n                    label=\"Дата сеанса\"\r\n                    minDate={new Date(showtime.start_date)}\r\n                    maxDate={new Date(showtime.end_date)}\r\n                    value={selectedDate}\r\n                    onChange={(date) => setSelectedDate(date)}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <TextField\r\n                  fullWidth\r\n                  disabled\r\n                  // select\r\n                  value={showtime.start_at}\r\n                  variant=\"outlined\"\r\n                >\r\n                  {/* {showtime.length > 0 &&\r\n                    showtime.split(',').map((time) => (\r\n                      // eslint-disable-next-line react/no-array-index-key\r\n                      <MenuItem key={`${time}`} value={time}>\r\n                        {time}\r\n                      </MenuItem>\r\n                    ))} */}\r\n                </TextField>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <BookingSeats\r\n              seats={seats}\r\n              onSelectSeat={(indexRow, index) => onSelectSeat(indexRow, index)}\r\n            />\r\n\r\n            <Grid container className={classes.checkout}>\r\n              <Grid item xs={4} md={8}>\r\n                <Grid container spacing={3} style={{ padding: 20 }}>\r\n                  <Grid item className={classes.hideOnSmall}>\r\n                    <Typography className={classes.bannerTitle}>\r\n                      Email\r\n                    </Typography>\r\n                    <Typography className={classes.bannerContent}>\r\n                      {email}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography className={classes.bannerTitle}>\r\n                      Цена билета\r\n                    </Typography>\r\n                    <Typography className={classes.bannerContent}>\r\n                      {showtime.ticket_price}\r\n                      {' \\u20BD'}\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item className={classes.hideOnSmall}>\r\n                    <Typography className={classes.bannerTitle}>\r\n                      Билеты\r\n                    </Typography>\r\n                    {count > 0 ? (\r\n                      <Typography className={classes.bannerContent}>\r\n                        {count}\r\n                      </Typography>\r\n                    ) : (\r\n                      <Typography className={classes.bannerContent}>\r\n                        0\r\n                      </Typography>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography className={classes.bannerTitle}>\r\n                      Итого\r\n                    </Typography>\r\n                    <Typography className={classes.bannerContent}>\r\n                      {showtime.ticket_price * count}\r\n                      {' \\u20BD'}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                md={2}\r\n                style={{\r\n                  display: 'flex',\r\n                }}\r\n              >\r\n                <Button color=\"inherit\" fullWidth href={`/movies/${id}`}>\r\n                  Отменить\r\n                </Button>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                md={2}\r\n                style={{\r\n                  display: 'flex',\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  disabled={count === 0}\r\n                  onClick={() => onConfirmBook()}\r\n                >\r\n                  Подтвердить\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <div className={classes.blurBackground} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BookingPage;\r\n","C:\\Projects\\cinema-app\\client\\src\\components\\Movies.jsx",["68"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Carousel from 'react-material-ui-carousel';\r\nimport { textTruncate } from '../utils/utils';\r\nimport {\r\n  CssBaseline,\r\n  Card,\r\n  CardMedia,\r\n  CardActionArea,\r\n  CardContent,\r\n  Typography,\r\n  Link,\r\n} from '.';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    borderRadius: '15px !important',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '43%',\r\n    backgroundRepeat: 'no-repeat',\r\n    borderRadius: '15px !important',\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n    background: 'linear-gradient(to top, #000, rgba(0,0,0,0))',\r\n    borderRadius: '15px !important',\r\n  },\r\n  action: {\r\n    borderRadius: '15px !important',\r\n  },\r\n}));\r\n\r\nconst Movies = () => {\r\n  const [data, setData] = useState('');\r\n\r\n  const getData = async () => {\r\n    try {\r\n      const res = await fetch('http://localhost:5000/movies', {\r\n        method: 'GET',\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      const parseData = await res.json();\r\n      setData(parseData);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Typography\r\n        component=\"h3\"\r\n        variant=\"h3\"\r\n        align=\"center\"\r\n        color=\"textPrimary\"\r\n        gutterBottom\r\n      >\r\n        сейчас в прокате\r\n      </Typography>\r\n      <Carousel animation=\"fade\" interval={10500}>\r\n        {data.length !== 0 &&\r\n          data[0].movie_id !== null &&\r\n          data.map((movies) => (\r\n            <Link\r\n              href={`movies/${movies.movie_id}`}\r\n              style={{ textDecoration: 'none' }}\r\n            >\r\n              <Card className={classes.card}>\r\n                <CardActionArea className={classes.action}>\r\n                  <CardMedia\r\n                    className={classes.cardMedia}\r\n                    image={movies.image_url}\r\n                    title={movies.movie_title}\r\n                  >\r\n                    <CardContent className={classes.cardContent}>\r\n                      <Typography gutterBottom variant=\"h4\" component=\"h4\">\r\n                        {movies.movie_title}\r\n                      </Typography>\r\n                      <Typography>\r\n                        {textTruncate(movies.movie_description, 200)}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardMedia>\r\n                </CardActionArea>\r\n              </Card>\r\n            </Link>\r\n          ))}\r\n      </Carousel>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n",["69","70","71","72","73"],"C:\\Projects\\cinema-app\\client\\src\\components\\index.js",["74","75","76","77","78","79","80","81","82","83"],"C:\\Projects\\cinema-app\\client\\src\\index.js",[],"C:\\Projects\\cinema-app\\client\\src\\components\\MyTickets.jsx",["84","85"],"C:\\Projects\\cinema-app\\client\\src\\components\\SignUp.jsx",["86"],"C:\\Projects\\cinema-app\\client\\src\\components\\Dashboard.jsx",["87","88"],"C:\\Projects\\cinema-app\\client\\src\\components\\Footer.jsx",[],"C:\\Projects\\cinema-app\\client\\src\\components\\Header.jsx",[],"C:\\Projects\\cinema-app\\client\\src\\components\\BookingSeats.jsx",[],"C:\\Projects\\cinema-app\\client\\src\\components\\Movie.jsx",["89"],"import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Typography,\r\n  Container,\r\n  Box,\r\n  Button,\r\n  ArrowBackIcon,\r\n  ConfirmationNumberIcon,\r\n} from '.';\r\n\r\nconst Movie = () => {\r\n  const [selectedMovie, setSelectedMovie] = useState('');\r\n  const [genre, setGenre] = useState('');\r\n  const { id } = useParams();\r\n  const getMovie = async () => {\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/movies/${id}`, {\r\n        method: 'GET',\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      const parse = await res.json();\r\n      setSelectedMovie(parse[0]);\r\n      setGenre(parse[0].movie_genre);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMovie();\r\n  }, []);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    backImg: {\r\n      backgroundImage: `linear-gradient(to right, rgba(0,0,0,.9) 25%, transparent 100%),url(${selectedMovie.image_url})`,\r\n      position: 'absolute',\r\n      filter: 'blur(1.3px)',\r\n      height: '100vh',\r\n      backgroundPosition: 'center',\r\n      backgroundSize: 'cover',\r\n      backgroundRepeat: 'no-repeat',\r\n      width: '100%',\r\n    },\r\n    movieInfo: {\r\n      background: 'transparant',\r\n      transform: 'translate(0%, 0%)',\r\n      padding: theme.spacing(30, 2, 0, 2),\r\n      margin: theme.spacing(0, 50, 0, 0),\r\n    },\r\n    genre: {\r\n      padding: theme.spacing(0.5, 4),\r\n      marginRight: theme.spacing(1.5),\r\n      border: '2px solid ',\r\n      borderColor: '#5f5da9',\r\n      borderRadius: 20,\r\n      [theme.breakpoints.down('sm')]: {\r\n        padding: theme.spacing(0.5, 2),\r\n      },\r\n    },\r\n    description: {\r\n      mixBlendMode: 'difference',\r\n      padding: theme.spacing(0, 50, 0, 0),\r\n    },\r\n    director: {\r\n      color: theme.palette.primary.light,\r\n    },\r\n    btn: {\r\n      border: '2px solid ',\r\n      borderColor: '#5f5da9',\r\n      borderRadius: 20,\r\n      padding: theme.spacing(0.7, 4),\r\n      marginRight: theme.spacing(1.5),\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      movieInfo: { padding: theme.spacing(15, 2, 0, 2) },\r\n      description: { padding: theme.spacing(0, 10, 0, 0) },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.backImg} />\r\n      <Container className={classes.movieInfo} maxWidth=\"lg\">\r\n        <Box mb={3} display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\">\r\n          {genre[0] !== undefined ? (\r\n            genre.map((genree) => (\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                color=\"inherit\"\r\n                className={classes.genre}\r\n              >\r\n                {genree}\r\n              </Typography>\r\n            ))\r\n          ) : (\r\n            <p>No genres</p>\r\n          )}\r\n        </Box>\r\n\r\n        <Typography gutterBottom variant=\"h1\" color=\"inherit\" align=\"left\">\r\n          {selectedMovie.movie_title}\r\n        </Typography>\r\n\r\n        <Typography\r\n          className={classes.description}\r\n          variant=\"body1\"\r\n          color=\"inherit\"\r\n          align=\"left\"\r\n          paragraph\r\n        >\r\n          {selectedMovie.movie_description}\r\n        </Typography>\r\n        <Typography\r\n          className={classes.director}\r\n          variant=\"h5\"\r\n          align=\"left\"\r\n          gutterBottom\r\n        >\r\n          Режиссёр:\r\n          {` `}\r\n          {selectedMovie.movie_director}\r\n        </Typography>\r\n        <Typography variant=\"body1\" color=\"inherit\" gutterBottom paragraph>\r\n          {`Длительность: `}\r\n          {selectedMovie.movie_duration}\r\n          {` мин.`}\r\n        </Typography>\r\n        <Button\r\n          className={classes.btn}\r\n          variant=\"outlined\"\r\n          href=\"/dashboard\"\r\n          startIcon={<ArrowBackIcon />}\r\n        >\r\n          Назад\r\n        </Button>\r\n        <Button\r\n          className={classes.btn}\r\n          variant=\"outlined\"\r\n          href={`/booking/${id}`}\r\n          startIcon={<ConfirmationNumberIcon />}\r\n        >\r\n          Купить билеты\r\n        </Button>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n",["90","91","92","93","94"],"C:\\Projects\\cinema-app\\client\\src\\App.js",["95","96","97","98"],{"ruleId":"99","severity":1,"message":"100","line":87,"column":7,"nodeType":"101","messageId":"102","endLine":87,"endColumn":20},{"ruleId":"99","severity":1,"message":"100","line":37,"column":7,"nodeType":"101","messageId":"102","endLine":37,"endColumn":20},{"ruleId":"99","severity":1,"message":"100","line":53,"column":7,"nodeType":"101","messageId":"102","endLine":53,"endColumn":20},{"ruleId":"99","severity":1,"message":"100","line":68,"column":7,"nodeType":"101","messageId":"102","endLine":68,"endColumn":20},{"ruleId":"99","severity":1,"message":"100","line":83,"column":7,"nodeType":"101","messageId":"102","endLine":83,"endColumn":20},{"ruleId":"99","severity":1,"message":"100","line":103,"column":7,"nodeType":"101","messageId":"102","endLine":103,"endColumn":20},{"ruleId":"99","severity":1,"message":"100","line":142,"column":7,"nodeType":"101","messageId":"102","endLine":142,"endColumn":20},{"ruleId":"99","severity":1,"message":"100","line":193,"column":7,"nodeType":"101","messageId":"102","endLine":193,"endColumn":20},{"ruleId":"103","severity":1,"message":"104","line":198,"column":16,"nodeType":"105","messageId":"106","endLine":198,"endColumn":25},{"ruleId":"99","severity":1,"message":"100","line":50,"column":7,"nodeType":"101","messageId":"102","endLine":50,"endColumn":20},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":2,"message":"118","line":2,"column":1,"nodeType":"119","endLine":2,"endColumn":52},{"ruleId":"117","severity":2,"message":"118","line":3,"column":1,"nodeType":"119","endLine":3,"endColumn":46},{"ruleId":"117","severity":2,"message":"118","line":4,"column":1,"nodeType":"119","endLine":4,"endColumn":46},{"ruleId":"117","severity":2,"message":"118","line":5,"column":1,"nodeType":"119","endLine":5,"endColumn":46},{"ruleId":"117","severity":2,"message":"118","line":6,"column":1,"nodeType":"119","endLine":6,"endColumn":46},{"ruleId":"117","severity":2,"message":"118","line":7,"column":1,"nodeType":"119","endLine":7,"endColumn":46},{"ruleId":"117","severity":2,"message":"118","line":8,"column":1,"nodeType":"119","endLine":8,"endColumn":44},{"ruleId":"117","severity":2,"message":"118","line":9,"column":1,"nodeType":"119","endLine":9,"endColumn":52},{"ruleId":"117","severity":2,"message":"118","line":10,"column":1,"nodeType":"119","endLine":10,"endColumn":56},{"ruleId":"117","severity":2,"message":"118","line":11,"column":1,"nodeType":"119","endLine":11,"endColumn":58},{"ruleId":"99","severity":1,"message":"100","line":51,"column":7,"nodeType":"101","messageId":"102","endLine":51,"endColumn":20},{"ruleId":"99","severity":1,"message":"100","line":68,"column":7,"nodeType":"101","messageId":"102","endLine":68,"endColumn":20},{"ruleId":"99","severity":1,"message":"100","line":78,"column":7,"nodeType":"101","messageId":"102","endLine":78,"endColumn":20},{"ruleId":"99","severity":1,"message":"100","line":26,"column":7,"nodeType":"101","messageId":"102","endLine":26,"endColumn":20},{"ruleId":"99","severity":1,"message":"100","line":36,"column":7,"nodeType":"101","messageId":"102","endLine":36,"endColumn":20},{"ruleId":"99","severity":1,"message":"100","line":28,"column":7,"nodeType":"101","messageId":"102","endLine":28,"endColumn":20},{"ruleId":"107","replacedBy":"120"},{"ruleId":"109","replacedBy":"121"},{"ruleId":"111","replacedBy":"122"},{"ruleId":"113","replacedBy":"123"},{"ruleId":"115","replacedBy":"124"},{"ruleId":"99","severity":1,"message":"100","line":80,"column":7,"nodeType":"101","messageId":"102","endLine":80,"endColumn":18},{"ruleId":"125","severity":1,"message":"126","line":103,"column":25,"nodeType":"127","endLine":103,"endColumn":35},{"ruleId":"125","severity":1,"message":"126","line":114,"column":25,"nodeType":"127","endLine":114,"endColumn":35},{"ruleId":"125","severity":1,"message":"126","line":125,"column":28,"nodeType":"127","endLine":125,"endColumn":38},"no-console","Unexpected console statement.","MemberExpression","unexpected","func-names","Unexpected unnamed function.","FunctionExpression","unnamed","lines-around-directive",["128"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"import/no-cycle","Dependency cycle detected.","ExportNamedDeclaration",["128"],[],[],[],[],"react/jsx-props-no-spreading","Prop spreading is forbidden","JSXSpreadAttribute","padding-line-between-statements"]